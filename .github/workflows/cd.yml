
name: Packer CI

env:
    GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
    GCP_REGION: ${{ secrets.GCP_REGION }}
    GCP_DB_HOST: ${{ secrets.GCP_DB_HOST }}
    GCP_DB_USER: ${{ secrets.GCP_DB_USER }}
    GCP_DB_PASSWORD: ${{ secrets.GCP_DB_PASSWORD }}
    GCP_DB_NAME: ${{ secrets.GCP_DB_NAME }}
    GCP_KMS_KEY_RING: ${{ secrets.GCP_KMS_KEY_RING }}
    GCP_KMS_CRYPTO_KEY: ${{ secrets.GCP_KMS_CRYPTO_KEY }}      
    GCP_GROUP_MANAGER: ${{ secrets.GCP_GROUP_MANAGER }}  

on:
  push:
    branches:
      - A9

jobs:
  validate-packer-build:
    name: Validate Packer Template and Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Authenticate with Google Cloud
      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.AMRESH_DEVKEY }}

      # Set up Google Cloud SDK
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

        
      - name: Debug Secret Values
        run: |
          echo "GCP_PROJECT_ID: $GCP_PROJECT_ID"
          echo "GCP_REGION: $GCP_REGION"
          echo "GCP_DB_HOST: $GCP_DB_HOST"
          echo "GCP_DB_USER: $GCP_DB_USER"
          echo "GCP_DB_PASSWORD: $GCP_DB_PASSWORD"
          echo "GCP_DB_NAME: $GCP_DB_NAME"
          echo "GCP_KMS_KEY_RING: $GCP_KMS_KEY_RING"
          echo "GCP_KMS_CRYPTO_KEY: $GCP_KMS_CRYPTO_KEY"
          echo "GCP_GROUP_MANAGER: $GCP_GROUP_MANAGER"

      - name: Zip application
        run: zip -r webapp.zip .

      - name: Authenticate with Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.AMRESH_DEVKEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Use gcloud CLI
        run: gcloud info

      - name: Install Packer
        run: packer init ./packer/packer.pkr.hcl

      - name: FMT Packer
        run: packer fmt ./packer/packer.pkr.hcl

      - name: Run Packer validate
        run: packer validate ./packer/packer.pkr.hcl

      - name: Run Packer Image Build
        id: packer-build

        run: |
          packer build -machine-readable ./packer/packer.pkr.hcl | tee output.txt || exit 0
          IMAGE_NAME=$(grep 'artifact,0,id' output.txt | cut -d, -f6)
          echo "::set-output name=image_name::${IMAGE_NAME}"


      - name: Create Instance Template
        run: |
            gcloud compute instance-templates create webappinstance-${{ steps.packer-build.outputs.image_name }} \
            --project="${GCP_PROJECT_ID}" \
            --machine-type=n1-standard-1 \
            --network-interface=subnet=webapp,no-address \
            --instance-template-region="${GCP_REGION}" \
            --metadata=startup-script="#!/bin/bash
            if [ ! -f \"/opt/webapp/.env\" ]; then
                touch /opt/webapp/.env
            fi
            echo 'DBHOST=${GCP_DB_HOST}' > /opt/webapp/.env
            echo 'DBUSER=${GCP_DB_USER}' >> /opt/webapp/.env
            echo 'DBPASSWORD=${GCP_DB_PASSWORD}' >> /opt/webapp/.env
            echo 'DBNAME=${GCP_DB_NAME}' >> /opt/webapp/.env
            " \
            --maintenance-policy=MIGRATE \
            --provisioning-model=STANDARD \
            --service-account=webapp@${GCP_PROJECT_ID}.iam.gserviceaccount.com \
            --scopes=https://www.googleapis.com/auth/cloud-platform \
            --region="${GCP_REGION}" \
            --tags=load-balanced-backend,allow-health-check,http-server \
            --create-disk=auto-delete=yes,boot=yes,device-name=persistent-disk-0,image=projects/${GCP_PROJECT_ID}/global/images/${{ steps.packer-build.outputs.image_name }},kms-key=projects/${GCP_PROJECT_ID}/locations/${GCP_REGION}/keyRings/${GCP_KEY_RING}/cryptoKeys/${GCP_CRYPTO_KEY},mode=rw,size=100,type=pd-standard \
            --no-shielded-secure-boot \
            --shielded-vtpm \
            --shielded-integrity-monitoring \
            --reservation-affinity=any

      - name: Update Managed Instance Group
        run: |
            gcloud compute instance-groups managed set-instance-template "${GCP_GROUP_MANAGER}" \
                --project="${GCP_PROJECT_ID}" \
                --region="${GCP_REGION}" \
                --template=projects/${GCP_PROJECT_ID}/regions/${GCP_REGION}/instanceTemplates/webappinstance-${{ steps.packer-build.outputs.image_name }}

      - name: Start Rolling Update
        run: |
            gcloud compute instance-groups managed rolling-action start-update "${GCP_GROUP_MANAGER}" \
                --project="${GCP_PROJECT_ID}" \
                --type='proactive' \
                --version=template=projects/${GCP_PROJECT_ID}/regions/${GCP_REGION}/instanceTemplates/webappinstance-${{ steps.packer-build.outputs.image_name }} \
                --region="${GCP_REGION}"

      - name: Wait for Instance Group to Reach Target State
        run: |
             gcloud compute instance-groups managed wait-until "${GCP_GROUP_MANAGER}" --version-target-reached --region="${GCP_REGION}"
