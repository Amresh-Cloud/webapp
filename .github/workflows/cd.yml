name: Packer CI

on:
  push:
    branches:
      - A9

jobs:
  validate-packer-build:
    name: Validate Packer Template and Run Tests
    runs-on: ubuntu-latest

    steps:

      - name: Checkout code
        uses: actions/checkout@v2

 
      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.AMRESH_DEVKEY }}

     
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2


      - name: Zip application
        run: zip -r webapp.zip .


      - name: Install Packer
        run: packer init ./packer/packer.pkr.hcl


      - name: FMT Packer
        run: packer fmt ./packer/packer.pkr.hcl


      - name: Run Packer validate
        run: packer validate ./packer/packer.pkr.hcl

      
      - name: Run Packer Image Build
        id: packer-build
        run: |
          packer build -machine-readable ./packer/packer.pkr.hcl | tee output.txt
          IMAGE_NAME=$(grep 'artifact,0,id' output.txt | cut -d, -f6)
          echo "::set-output name=image_name::${IMAGE_NAME}"

      # Create Instance Template using Packer image
      - name: Create Instance Template
        run: |
          # Get the Packer-generated image name
          IMAGE_NAME="${{ steps.packer-build.outputs.image_name }}"
          
          # Construct the template name
          TEMPLATE_NAME="webappinstance-${IMAGE_NAME}"
          
          # Create instance template
          gcloud compute instance-templates create $TEMPLATE_NAME \
            --project=devv-414701 \
            --machine-type=n1-standard-1 \
            --network-interface=subnet=webapp,no-address \
            --instance-template-region=us-east1 \
            --metadata=startup-script="#!/bin/bash
              if [ ! -f \"/opt/webapp/.env\" ]; then
                  touch /opt/webapp/.env
              fi
              echo \"DBHOST=10.247.90.2\" > /opt/webapp/.env
              echo \"DBUSER=webapp\" >> /opt/webapp/.env
              echo \"DBPASSWORD=SUPXzDll528hVBvL\" >> /opt/webapp/.env
              echo \"DBNAME=webapp\" >> /opt/webapp/.env
              " \
            --maintenance-policy=MIGRATE \
            --provisioning-model=STANDARD \
            --service-account=webapp@devv-414701.iam.gserviceaccount.com \
            --scopes=https://www.googleapis.com/auth/cloud-platform \
            --region=us-east1 \
            --tags=load-balanced-backend,allow-health-check,http-server \
            --create-disk=auto-delete=yes,boot=yes,device-name=persistent-disk-0,image=projects/devv-414701/global/images/${IMAGE_NAME},kms-key=projects/devv-414701/locations/us-east1/keyRings/9fmoh/cryptoKeys/instance-key9fmoh,mode=rw,size=100,type=pd-standard \
            --no-shielded-secure-boot \
            --shielded-vtpm \
            --shielded-integrity-monitoring \
            --reservation-affinity=any

      #  Update managed instance group with the new instance template
      - name: Update Managed Instance Group
        run: |
          gcloud compute instance-groups managed set-instance-template gp-manager \
            --project=devv-414701 \
            --region=us-east1 \
            --template=projects/devv-414701/regions/us-east1/instanceTemplates/${TEMPLATE_NAME}

      #  Start rolling update for the managed instance group
      - name: Start Rolling Update
        run: |
          gcloud compute instance-groups managed rolling-action start-update gp-manager \
            --project=devv-414701 \
            --type='proactive' \
            --version=template=projects/devv-414701/regions/us-east1/instanceTemplates/${TEMPLATE_NAME} \
            --region=us-east1

      #  Wait until the managed instance group reaches the desired state
      - name: Wait for Instance Group to Reach Target State
        run: |
          gcloud compute instance-groups managed wait-until gp-manager --version-target-reached --region=us-east1
